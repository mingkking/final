<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mgr.dao.MgrDAO">

   <!-- session 생성 시 데이터 저장(방문자 데이터 ) -->
   <insert id="saveSession" parameterType="MgrSessionCountVO">
      INSERT INTO countVisit(sessionId, creationTime)
      VALUES(#{sessionId}, TRUNC(SYSDATE))
   </insert>
   
   <!-- 총 방문자 수 -->
   <select id="selectTotalSession" parameterType="MgrSessionCountVO" resultType="int">
      SELECT count(*)
      FROM countVisit
   </select>
   
   <!-- 오늘 방문자 수 -->
   <select id="selectTodaySession" parameterType="MgrSessionCountVO" resultType="int">
      SELECT count(*)
      FROM countVisit
      WHERE TRUNC(creationTime) = TRUNC(SYSDATE)
   </select>
   
   <!-- 한 달 방문자 수 -->
   <select id="selectMonthSession" parameterType="MgrSessionCountVO" resultType="int">
      SELECT count(*)
      FROM countVisit
      WHERE creationTime BETWEEN ADD_MONTHS(TRUNC(SYSDATE), -1) AND TRUNC(SYSDATE)
   </select>
   
   <!-- 회원 수 -->
   <select id="selectTotalMembers" parameterType="MgrMemberVO" resultType="int">
      SELECT count(*)
      FROM users
   </select>
   
   <!-- 금일 회원가입 수 -->
   <select id="selectTodayMembers" parameterType="MgrMemberVO" resultType="int">
      SELECT count(*)
      FROM users
      WHERE TRUNC(created_at) = TRUNC(SYSDATE)
   </select>
   
   <!-- 최근 5일간 가입자 수  -->
   <select id="selectLast5DaysMember" parameterType="MgrMemberVO" resultType="Map">
   <![CDATA[
      WITH date_range AS (
      SELECT TRUNC(SYSDATE) - 4 + LEVEL - 1 AS join_date
      FROM DUAL
      CONNECT BY LEVEL <= 5)
      SELECT TO_CHAR(dr.join_date, 'YYYY-MM-DD') AS join_date, NVL(COUNT(u.created_at), 0) AS join_count
      FROM date_range dr
      LEFT JOIN users u ON TO_CHAR(u.created_at, 'YYYY-MM-DD') = TO_CHAR(dr.join_date, 'YYYY-MM-DD')
      GROUP BY TO_CHAR(dr.join_date, 'YYYY-MM-DD')
      ORDER BY join_date
   ]]>
   </select>
   
   <!-- 최근 5달간 가입자 수       AND TRUNC(SYSDATE) > created_at -->
   <select id="selectLast5MonthsMember" parameterType="MgrMemberVO" resultType="Map">
      SELECT TO_CHAR(created_at, 'YYYY-MM') AS join_month, COUNT(*) AS join_count
      FROM users
      WHERE created_at >= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -4)
      GROUP BY TO_CHAR(created_at, 'YYYY-MM')
      ORDER BY join_month
   </select>
   
   <!-- 최근 2년간 가입자 수 -->
   <select id="selectLast2YearsMember" parameterType="MgrMemberVO" resultType="Map">
      SELECT TO_CHAR(created_at, 'YYYY') AS join_year, COUNT(*) AS join_count
      FROM users
      WHERE created_at >= ADD_MONTHS(TRUNC(SYSDATE, 'YYYY'), -24)
      GROUP BY TO_CHAR(created_at, 'YYYY')
      ORDER BY join_year
   </select>
   
   <!-- 구독자 수 -->
   <select id="selectTotalSubscribers" parameterType="MgrSubscriberCountVO" resultType="int">
      SELECT count(*)
      FROM subscribe
   </select>
   
   <!-- 금일 구독자 수 -->
   <select id="selectTodaySubscribers" parameterType="MgrSubscriberCountVO" resultType="int">
      SELECT count(*)
      FROM subscribe
      WHERE TRUNC(payment_date) = TRUNC(SYSDATE)
   </select>
   
   <!-- 회원 연령대 -->
    <select id="countByAgeMember" resultType="map">
      SELECT 
        age_group,
        COUNT(*) AS count
      FROM (
        SELECT 
            CASE
                WHEN age BETWEEN 10 AND 19 THEN '10대'
                WHEN age BETWEEN 20 AND 29 THEN '20대'
                WHEN age BETWEEN 30 AND 39 THEN '30대'
                WHEN age BETWEEN 40 AND 49 THEN '40대'
                ELSE '50대 이상'
            END AS age_group
      FROM (
            SELECT 
                FLOOR((SYSDATE - TO_DATE(user_birthdate, 'RRMMDD')) / 365) AS age
            FROM users
        ) derived_table
      ) age_groups
      GROUP BY age_group
    </select>
    
    <!-- 회원 목록 리스트 출력 -->
    <select id="selectMembers" resultType="MgrMemberVO">
    	SELECT *
    	FROM users
    	ORDER BY user_num DESC
    </select>
    
    <!-- memberDetail 출력(회원상세보기) -->
    <select id="selectMemberDetail" resultType="MgrMemberVO">
    	SELECT *
    	FROM users
    	WHERE user_num = #{user_num}
    </select>
    
    <!-- memberDetail 커뮤니티 글 출력 -->
    <select id="selectCommPost" resultType="MgrCommunityVO">
    	SELECT *
    	FROM community
    	WHERE user_num = #{user_num}
    </select>
    
    <!-- 회원 삭제 -->
    <delete id="deleteMember" parameterType="int">
    	DELETE FROM users
    	WHERE user_num = #{user_num}
    </delete>
</mapper>

